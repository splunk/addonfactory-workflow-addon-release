# jscpd:ignore-start
name: build-test-release
on:
  workflow_call:
    inputs:
      marker:
        required: false
        description: 'Parallel run marker'
        type: string
        default: >-
          [""]
    secrets:
      GH_TOKEN_ADMIN:
        description: Github admin token
        required: true
      GH_TOKEN:
        description: Github token
        required: true
      SEMGREP_PUBLISH_TOKEN:
        description: Semgrep token
        required: true
      AWS_ACCESS_KEY_ID:
        description: AWS access key id
        required: true
      AWS_DEFAULT_REGION:
        description: AWS default region
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: AWS secret access key
        required: true
      VT_API_KEY:
        description: Virustotal api key
        required: true
      CODECOV_TOKEN:
        description: Codecov token
        required: true
      OTHER_TA_REQUIRED_CONFIGS:
        description: other required configs
        required: true
      FOSSA_API_KEY:
        description: API token for FOSSA app
        required: true
      SKYNET_TOKEN:
        description: API token for Skynet
        required: false

jobs:
  splunk-details:
    runs-on: ubuntu-latest
    steps:
      - name: print credentials in bold
        run: |
          BOLD="\033[1m"
          NORMAL="\033[0m"
          echo -e "Splunk username is${BOLD} admin${NORMAL}"
          # echo "Splunk username is `tput setaf 1`admin`tput sgr0`"
          # RED_FG=`tput setaf 1`
          # RESET=`tput sgr0`
          # echo "Splunk username is `tput setaf 1`admin`tput sgr0`"
          RED='\033[0;31m'
          NC='\033[0m' # No Color
          printf "I ${RED}love${NC} Stack Overflow\n"
  check-skip:
    runs-on: ubuntu-latest
    steps:
      - name: Stage that can fail or pass
        id: Stage
        run: |
          echo "This stage will fail or pass"
          exit 1
      - name: Run this stage if earlier stage fails
        if: always()
        # if: always() && ${{steps.test_report.outputs.conclusion != 'success'}}
        run: |
          echo "Inside the second stage"